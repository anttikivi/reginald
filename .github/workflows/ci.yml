name: CI

on:
  push:
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}-${{ github.actor }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Build (${{ matrix.arch }}-${{ matrix.os }}) on ${{ matrix.runner }}
    if:
      "!contains(github.event.head_commit.message, '[ci skip]') &&
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !startsWith(github.event.head_commit.message, 'docs')"
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - { os: "linux", arch: "x86_64", runner: "ubuntu-24.04" }
          - { os: "linux", arch: "x86_64", runner: "ubuntu-22.04" }
          - { os: "linux", arch: "aarch64", runner: "ubuntu-24.04-arm" }
          - { os: "linux", arch: "aarch64", runner: "ubuntu-22.04-arm" }
          - { os: "macos", arch: "x86_64", runner: "macos-13" }
          - { os: "macos", arch: "aarch64", runner: "macos-14" }
          - { os: "macos", arch: "aarch64", runner: "macos-15" }
          - { os: "windows", arch: "x86_64", runner: "windows-2025" }
          - { os: "windows", arch: "x86_64", runner: "windows-2022" }
          - { os: "windows", arch: "aarch64", runner: "windows-11-arm" }
      fail-fast: false

    steps:
      - name: Clone the source code
        uses: actions/checkout@v5.0.0

      - name: Set up Zig
        uses: mlugg/setup-zig@v2.0.5

      - name: Build
        run: zig build

  test:
    name: Test (${{ matrix.arch }}-${{ matrix.os }}) on ${{ matrix.runner }}
    if:
      "!contains(github.event.head_commit.message, '[ci skip]') &&
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !startsWith(github.event.head_commit.message, 'docs')"
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - { os: "linux", arch: "x86_64", runner: "ubuntu-24.04" }
          - { os: "linux", arch: "x86_64", runner: "ubuntu-22.04" }
          - { os: "linux", arch: "aarch64", runner: "ubuntu-24.04-arm" }
          - { os: "linux", arch: "aarch64", runner: "ubuntu-22.04-arm" }
          - { os: "macos", arch: "x86_64", runner: "macos-13" }
          - { os: "macos", arch: "aarch64", runner: "macos-14" }
          - { os: "macos", arch: "aarch64", runner: "macos-15" }
          - { os: "windows", arch: "x86_64", runner: "windows-2025" }
          - { os: "windows", arch: "x86_64", runner: "windows-2022" }
          - { os: "windows", arch: "aarch64", runner: "windows-11-arm" }
      fail-fast: false

    steps:
      - name: Clone the source code
        uses: actions/checkout@v5.0.0

      - name: Set up Zig
        uses: mlugg/setup-zig@v2.0.5

      - name: Run the unit tests
        run: zig build test --summary all

  check-size:
    name:
      Check release size (${{ matrix.arch }}-${{ matrix.os }}) on ${{
      matrix.runner }}
    if:
      "!contains(github.event.head_commit.message, '[ci skip]') &&
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !startsWith(github.event.head_commit.message, 'docs')"
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - { os: "linux", arch: "x86_64", runner: "ubuntu-24.04" }
          - { os: "linux", arch: "x86_64", runner: "ubuntu-22.04" }
          - { os: "linux", arch: "aarch64", runner: "ubuntu-24.04-arm" }
          - { os: "linux", arch: "aarch64", runner: "ubuntu-22.04-arm" }
          - { os: "macos", arch: "x86_64", runner: "macos-13" }
          - { os: "macos", arch: "aarch64", runner: "macos-14" }
          - { os: "macos", arch: "aarch64", runner: "macos-15" }
          - { os: "windows", arch: "x86_64", runner: "windows-2025" }
          - { os: "windows", arch: "x86_64", runner: "windows-2022" }
          - { os: "windows", arch: "aarch64", runner: "windows-11-arm" }
      fail-fast: false

    steps:
      - name: Clone the source code
        uses: actions/checkout@v5.0.0

      - name: Set up Zig
        uses: mlugg/setup-zig@v2.0.5

      - name: Build `ReleaseSmall`
        run: zig build -Doptimize=ReleaseSmall

      - name: Check `ReleaseSmall` size
        shell: bash
        run: |
          max_size=1474560
          exe="zig-out/bin/reginald"
          size="$(stat -c%s "${exe}" 2>/dev/null || stat -f%z "${exe}")"
          percent=$(( size * 100 / max_size ))

          echo "Executable size: ${size} bytes"
          echo "Maximum size: ${max_size} bytes"

          if [ "${size}" -gt "${max_size}" ]; then
              echo "Executable too large: ${size} bytes (limit ${max_size})"
              exit 1
          else
              echo "Executable size within limit (${percent}% used)"
          fi

      - name: Build `ReleaseFast`
        run: zig build -Doptimize=ReleaseFast

      - name: Check `ReleaseFast` size
        shell: bash
        run: |
          max_size=1474560
          exe="zig-out/bin/reginald"
          size="$(stat -c%s "${exe}" 2>/dev/null || stat -f%z "${exe}")"
          percent=$(( size * 100 / max_size ))

          echo "Executable size: ${size} bytes"
          echo "Maximum size: ${max_size} bytes"

          if [ "${size}" -gt "${max_size}" ]; then
              echo "Executable too large: ${size} bytes (limit ${max_size})"
              exit 1
          else
              echo "Executable size within limit (${percent}% used)"
          fi

  toml-test:
    name:
      Run toml-test (${{ matrix.arch }}-${{ matrix.os }}) on ${{ matrix.runner
      }}
    if:
      "!contains(github.event.head_commit.message, '[ci skip]') &&
      !contains(github.event.head_commit.message, '[skip ci]') &&
      !startsWith(github.event.head_commit.message, 'docs')"
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - { os: "linux", arch: "x86_64", runner: "ubuntu-24.04" }
          - { os: "linux", arch: "x86_64", runner: "ubuntu-22.04" }
          - { os: "linux", arch: "aarch64", runner: "ubuntu-24.04-arm" }
          - { os: "linux", arch: "aarch64", runner: "ubuntu-22.04-arm" }
          - { os: "macos", arch: "x86_64", runner: "macos-13" }
          - { os: "macos", arch: "aarch64", runner: "macos-14" }
          - { os: "macos", arch: "aarch64", runner: "macos-15" }
          - { os: "windows", arch: "x86_64", runner: "windows-2025" }
          - { os: "windows", arch: "x86_64", runner: "windows-2022" }
          - { os: "windows", arch: "aarch64", runner: "windows-11-arm" }
      fail-fast: false

    steps:
      - name: Clone the source code
        uses: actions/checkout@v5.0.0

      - name: Set up Zig
        uses: mlugg/setup-zig@v2.0.5

      - name: Install the Go toolchain
        uses: actions/setup-go@v6.0.0
        with:
          go-version: "1.25"

      - name: Set up toml-test
        run: go install github.com/toml-lang/toml-test/cmd/toml-test@latest

      - name: Run toml-test
        run: zig build toml-test
